@import 'colors';
@import 'transitions';

/* =====  1 Global Rules & Definitions  ===================================== */

/* -----  1.1 Body / base definition  --------------------------------------- */

/* -----  1.2 Reset & Normalization  ---------------------------------------- */

*, *::before, *::after {
  font-family: 'Rubik', sans-serif;
  text-rendering: optimizeLegibility;
  margin: 0;
  padding: 0;
  border: none;
  box-sizing: border-box;
  list-style: none;
}

article, aside, details, figcaption, figure,
footer, header, main, menu, nav, section, summary {
  /* Add correct display for IE 9- and some newer browsers */
  display: block;
}

::-moz-selection {
  background: $orange;
  color: $black;
}

::selection {
  background: $orange;
  color: $black;
}

/* -----  1.3 General Typography  ------------------------------------------- */

h1, h2, h3, h4, h5, h6,
p, ul, ol, figure, pre {
  /* Reset font-sizes and normalize margins */
  font-size: inherit;
  line-height: inherit;
  margin: 0 0 1em;
}

h4, h5, h6, a, p, input, select, option, ul, ol, li, figure, pre, td, th,
button, textarea, label, .text {
  color: $gray-dark;
  font-weight: 300;
}

h1, h2, h3, th, .text-em {
  color: $black;
}

/* Headings */
h1, h2, h3, b, strong {
  font-weight: 500;
}

h1 {
  font-size: 2.5rem;
  line-height: 1.25;
  margin-bottom: 3rem;
}

h2 {
  font-size: 1.75rem;
  line-height: 2.2rem;
}

h3 {
  font-size: 1.25em;
  line-height: 1.2;
}

h4 {
  font-size: 1em;
}

/* Links */
a {
  color: inherit;
  text-decoration: none !important;
  border-bottom: 1px solid $gray-lighter;
  transition: color $transition-very-fast $ease-in-out-cubic,
              border-bottom-color $transition-very-fast $ease-in-out-cubic;
}

a:hover, a:focus, a:active {
  color: $primary;
  border-bottom-color: $primary;
}

button:hover
button:active,
button:focus {
  outline: none;
}

img {
  border-style: none;
  width: 100%;
  height: auto;
}

figcaption {
  font-size: .75rem;
  line-height: 1.5rem;
}
a, p, button, .btn-like {
  font-weight: 300;
}

textarea {
  padding: 0.25rem;
  font-size: 1em;
  border: 1px solid $gray-lightest;
  border-radius: 0.25rem;

  &:active,
  &:focus {
    border-color: $primary;
    outline: none;
  }
}

/* =====  Global Styles  ==================================================== */

// I should rather use `.btn` but higlass uses the same global class name...
.button {
  padding: 0.25rem 0.5rem;
  cursor: pointer;
  border: 0;
  border-radius: 0.25rem;
  background: $gray-lightest;
  transition: color $transition-very-fast $ease-in-out-cubic,
              background $transition-very-fast $ease-in-out-cubic;

  &:hover {
    border: 0;
    color: $primary;
    background: lighten($primary, 40%);
  }

  &.is-icon-only {
    svg-icon {
      width: 1em;
      height: 1em;
    }
  }
}

.rel {
  position: relative;
}

.fw,
.full-wh {
  width: 100%;
}

.fh,
.full-wh {
  height: 100%;
}

.full-dim {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.no-list-style {
  list-style: none;
  margin: 0;
  padding: 0;
}

.inline-list li {
  display: inline-block;
}

.float-list li {
  display: block;
  float: left;
}

.draggable {
  &:hover {
    cursor: pointer;
  }
}

.icon-inline svg {
  width: 1em;
  height: 1em;
}

.no-overflow {
  overflow: hidden;
}

.oa {
  overflow: auto
}

.spinner-bg {
  padding: 1rem;
  border-radius: 0.25rem;
  background: $white;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1),
              0 1px 3px 0 rgba(0, 0, 0, 0.05),
              0 2px 6px 0 rgba(0, 0, 0, 0.05);
}

body.dragging,
.draggable:active {
  cursor: move !important;
}

body.dragging-horizontal,
.draggable.horizontal-only:active {
  cursor: ew-resize !important;
}

body.dragging-vertical,
.draggable.vertical-only:active {
  cursor: ns-resize !important;
}

.is-align-center {
  text-align: center;
}

.is-align-right {
  text-align: right;
}

.is-increased-line-height {
  line-height: 1.66em;
}

.is-justified {
  text-align: justify;
}

.wrap {
  max-width: 60rem;
  margin: 0 auto;
}

.max-50 {
  max-width: 50%;
}

.iconized {
  &.iconized-p svg {
    height: 1em;
  }

  svg {
    width: 1em;
    margin-right: 0.33rem;
  }
}

.smaller {
  font-size: 1rem;
}

ul.extra-padding li,
ol.extra-padding li {
  margin: 0.125rem 0;
  padding: 0.25rem 0;
}

ul.is-columized,
ol.is-columized {
  li {
    display: inline-block;
    width: 33%;
  }
}

p.nm {
  margin-bottom: 0;
}

.fade-in {
  background: #fff;
  background: -moz-linear-gradient(top, rgba(255, 255, 255, 0.95) 0%, rgba(255, 255, 255, 0.75) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.95) 0%,rgba(255, 255, 255, 0.75) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.95) 0%,rgba(255, 255, 255, 0.75) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.fade-out {
  background: #fff;
  background: -moz-linear-gradient(top, rgba(255, 255, 255, 0.75) 0%, rgba(255, 255, 255, 1) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.75) 0%,rgba(255, 255, 255, 1) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.75) 0%,rgba(255, 255, 255, 1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.anchored {
  position: relative;
}

.hidden-anchor {
  position: absolute;
  display: block;
  top: 0;
  left: -2rem;
  bottom: 0;
  width: 2.5rem;
  padding: 0 1.5rem 0 0.25rem;
  opacity: 0.33;
  transform: scale(0);
  transition: all $transition-fast $ease-in-out-cubic;
  border-bottom: 0;
  box-shadow: none !important;
  cursor: pointer;

  svg-icon {
    width: 1.125rem;
    height: 100%;
  }
}

.anchored:hover .hidden-anchor,
.anchored:target .hidden-anchor {
  transform: scale(1);
}

.hidden-anchor:hover,
.anchored:target .hidden-anchor {
  opacity: 1;
}

.anchored:target {
  color: $black;

  &.underlined::after {
    position: absolute;
    z-index: -1;
    display: block;
    top: 0;
    left: -2rem;
    border-bottom: 2px solid $primary;
    background: transparentize($primary, 0.9);
  }

  .hidden-anchor {
    width: 1.5rem;
    color: $white;
    background: $primary;
  }
}

@media (min-width: 60rem) {  // 960px
  .is-increased-font-size {
    font-size: 1.125em;
  }
}

@media (min-width: 64rem) {  // 1024px
  .is-slightly-increased-font-size {
    font-size: 1.125em;
  }

  .is-increased-font-size {
    font-size: 1.25em;
  }
}
