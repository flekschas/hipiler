!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).clusterfck=e()}}(function(){return function e(t,s,i){function r(o,h){if(!s[o]){if(!t[o]){var a="function"==typeof require&&require;if(!h&&a)return a(o,!0);if(n)return n(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var u=s[o]={exports:{}};t[o][0].call(u.exports,function(e){var s=t[o][1][e];return r(s||e)},u,u.exports,e,t,s,i)}return s[o].exports}for(var n="function"==typeof require&&require,o=0;o<i.length;o++)r(i[o]);return r}({1:[function(e,t,s){t.exports={hcluster:e("./hcluster"),Kmeans:e("./kmeans"),kmeans:e("./kmeans").kmeans}},{"./hcluster":3,"./kmeans":4}],2:[function(e,t,s){t.exports={euclidean:function(e,t){for(var s=0,i=0;i<e.length;i++)s+=Math.pow(t[i]-e[i],2);return Math.sqrt(s)},manhattan:function(e,t){for(var s=0,i=0;i<e.length;i++)s+=Math.abs(t[i]-e[i]);return s},max:function(e,t){for(var s=0,i=0;i<e.length;i++)s=Math.max(s,Math.abs(t[i]-e[i]));return s}}},{}],3:[function(e,t,s){var i=e("./distance"),r=function(e,t,s){this.distance=e,this.linkage=t,this.threshold=null==s?1/0:s};r.prototype={tree:function(e,t,s){this.tree=[],this.dists=[],this.mins=[],this.index=[];for(var i=0;i<e.length;i++){var r={value:e[i],key:i,index:i,size:1};this.tree[i]=r,this.index[i]=r,this.dists[i]=[],this.mins[i]=0}for(i=0;i<this.tree.length;i++)for(var n=0;n<=i;n++){var o=i==n?1/0:this.distance(this.tree[i].value,this.tree[n].value);this.dists[i][n]=o,this.dists[n][i]=o,o<this.dists[i][this.mins[i]]&&(this.mins[i]=n)}var h=this.mergeClosest();for(i=0;h;)s&&i++%t==0&&s(this.tree),h=this.mergeClosest();return this.tree.forEach(function(e){delete e.key,delete e.index}),this.tree},mergeClosest:function(){for(var e=0,t=1/0,s=0;s<this.tree.length;s++){var i=this.tree[s].key;(h=this.dists[i][this.mins[i]])<t&&(e=i,t=h)}if(t>=this.threshold)return!1;var r=this.index[e],n=this.index[this.mins[e]],o={dist:t,left:r,right:n,key:r.key,size:r.size+n.size};this.tree[r.index]=o,this.tree.splice(n.index,1),this.index[r.key]=o;for(s=0;s<this.tree.length;s++){var h,a=this.tree[s];r.key==a.key?h=1/0:"single"==this.linkage?(h=this.dists[r.key][a.key],this.dists[r.key][a.key]>this.dists[n.key][a.key]&&(h=this.dists[n.key][a.key])):"complete"==this.linkage?(h=this.dists[r.key][a.key],this.dists[r.key][a.key]<this.dists[n.key][a.key]&&(h=this.dists[n.key][a.key])):h="average"==this.linkage?(this.dists[r.key][a.key]*r.size+this.dists[n.key][a.key]*n.size)/(r.size+n.size):this.distance(a.value,r.value),this.dists[r.key][a.key]=this.dists[a.key][r.key]=h}for(s=0;s<this.tree.length;s++){var f=this.tree[s].key;if(this.mins[f]==r.key||this.mins[f]==n.key){t=f;for(var u=0;u<this.tree.length;u++){var d=this.tree[u].key;this.dists[f][d]<this.dists[f][t]&&(t=d)}this.mins[f]=t}this.tree[s].index=s}return delete r.key,delete n.key,delete r.index,delete n.index,!0},clusters:function(e){(e>this.tree.size||e<1)&&(e=this.tree.size);for(var t=[],s=[this.tree];e>1;){var i=r(s);s.splice(s.indexOf(i),1),s.push(i.left,i.right),e--}function r(e){var t,s=-1;return e.forEach(function(e){e.dist>s&&(s=e.dist,t=e)}),t}return s.forEach(function(e){t.push(function e(t){if(1===t.size)return[t.value];return e(t.left).concat(e(t.right))}(e))}),t}};t.exports=function(e,t,s,n,o,h){s=s||"average","string"==typeof(t=t||"euclidean")&&(t=i[t]);var a=new r(t,s,n),f=a.tree(e,o,h);return{tree:void 0===n?f[0]:f,clusters:a.clusters}}},{"./distance":2}],4:[function(e,t,s){var i=e("./distance");function r(e){this.centroids=e||[]}r.prototype.randomCentroids=function(e,t){var s=e.slice(0);return s.sort(function(){return Math.round(Math.random())-.5}),s.slice(0,t)},r.prototype.classify=function(e,t){var s=1/0,r=0;"string"==typeof(t=t||"euclidean")&&(t=i[t]);for(var n=0;n<this.centroids.length;n++){var o=t(e,this.centroids[n]);o<s&&(s=o,r=n)}return r},r.prototype.cluster=function(e,t,s,r,n){t=t||Math.max(2,Math.ceil(Math.sqrt(e.length/2))),"string"==typeof(s=s||"euclidean")&&(s=i[s]),this.centroids=this.randomCentroids(e,t);for(var o=new Array(e.length),h=new Array(t),a=0,f=!0;f;){for(var u=0;u<e.length;u++)o[u]=this.classify(e[u],s);f=!1;for(var d=0;d<t;d++){var c=[];for(u=0;u<o.length;u++)o[u]==d&&c.push(e[u]);if(c.length){for(var l=this.centroids[d],y=new Array(l.length),k=0;k<l.length;k++){var v=0;for(u=0;u<c.length;u++)v+=c[u][k];y[k]=v/c.length,y[k]!=l[k]&&(f=!0)}this.centroids[d]=y,h[d]=c}}n&&a++%r==0&&n(h)}return h},r.prototype.toJSON=function(){return JSON.stringify(this.centroids)},r.prototype.fromJSON=function(e){return this.centroids=JSON.parse(e),this},t.exports=r,t.exports.kmeans=function(e,t){return(new r).cluster(e,t)}},{"./distance":2}]},{},[1])(1)}),self.onmessage=function(e){var t,s=[],i=new clusterfck.Kmeans(e.data.centroids||[]);try{s=i.cluster(e.data.data,e.data.numClusters||3)}catch(e){t=e.message}s=s.map(function(e){return e.map(function(e){return e.id})}),self.postMessage({clusters:s,error:t})};